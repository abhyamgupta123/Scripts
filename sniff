#!/bin/bash
# This scripts searches for files according to given arguements.

if [[ $# -eq 2 ]]; then
    path_pat="$1"
    txt_pat="$2"
elif [[ $# -eq 1 ]] || [[ $# -gt 2 ]]; then
    path_pat="$1"
else
    echo "Usage: $0 path_pat [text_pat]"
fi

function findDirsToSearch
{
    path_pat=`dirname $1`
    if [[ "$path_pat" == *"##"* ]]; then
        ## Delete substring starting from ## till end.
        dir=${path_pat%%*\#\#*}
        dirs_to_search=`find $dir -type d`
    else
        # Replace all # with *
        path_pat=${path_pat//\#/*}
        for l in $path_pat; do
            if [[ -d $l ]]; then 
                dirs_to_search="$dirs_to_search $l"
            fi
        done
        echo $dirs_to_search
    fi
}

# This call updates the directories to be searched and a pattern which we want
# to grep.
#reformat $path_pat
#for d in $dirs_to_search; do
#    echo $d
#done
#echo "Format $file_pat"
# This script search for files in linux.
#
# It searches in two mode. Filename mode and pattern mode. if no pattern to
# search inside file is given then it searches only for name.

function searchForFiles
{
    directories=$1
    for dir in $directories; do
        files="$files `find $dir -maxdepth 1 -name \"$file_pat\" -type f`"
    done
    echo $files
}


if [[ $# -eq 2 ]]; then
    search_for_text=True
    txt=$2
elif [[ $# -lt 1 ]] || [[ $# -gt 2 ]]; then
    echo "Usage: $0 path_pattern [text_pattern]"
fi

file_pat=`basename "$1"`
directories=`findDirsToSearch $1`
files=`searchForFiles $directories`
if [ $search_for_text ]; then
    echo "Grep the text pattern"
else
    for f in $files; do
        printf "$f\n"
    done
fi
